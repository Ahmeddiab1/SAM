Battery Model Simple with REopt
595
313
10
GroupBox

1
7
Name
5
12
Battery Bank
X
3
9
Y
3
0
Width
3
572
Height
3
306
Caption
5
13
Battery Bank 
Bold
2
1
Choice

1
8
Name
5
21
batt_simple_chemistry
X
3
402
Y
3
48
Width
3
171
Height
3
24
Items
6
2
Lead Acid
Lithium Ion
Selection
3
4294967295
TabOrder
3
4294967295
Choice

1
8
Name
5
20
batt_simple_dispatch
X
3
402
Y
3
75
Width
3
171
Height
3
24
Items
6
3
Peak Shaving (look ahead)
Peak Shaving (look behind)
Custom Dispatch
Selection
3
4294967295
TabOrder
3
4294967295
CheckBox

1
8
Name
5
18
batt_simple_enable
X
3
30
Y
3
21
Width
3
141
Height
3
24
Caption
5
14
Enable battery
State
2
0
TabOrder
3
4294967295
Numeric

1
16
Name
5
14
batt_simple_kw
X
3
153
Y
3
75
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
0
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Numeric

1
16
Name
5
15
batt_simple_kwh
X
3
153
Y
3
48
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
0
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295
Label

1
12
Name
5
15
batt_size_label
X
3
24
Y
3
159
Width
3
543
Height
3
57
Caption
5
274
Use from the current case the lat/lon from Location and Resource, System Design, Losses, System Costs, Electricity Rates and Electric Load settings to determine for the current PV system design the optimal power, capacity and dispatch of a Li-Ion battery from the REopt API.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Button

1
7
Name
5
10
call_reopt
X
3
342
Y
3
243
Width
3
162
Height
3
24
Caption
5
21
Get Size and Dispatch
TabOrder
3
4294967295
Divider

1
9
Name
5
9
object 21
X
3
24
Y
3
138
Width
3
543
Height
3
16
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
38
Optimal Sizing and Dispatch from REopt
Bold
2
1
Numeric

1
16
Name
5
18
value_of_lost_load
X
3
147
Y
3
243
Width
3
90
Height
3
24
Value
1
0
Mode
3
1
Format
3
1
Decimals
3
0
Prefix
5
0
Suffix
5
0
ThousandsSep
2
1
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
4294967295

8
batt_custom_dispatch
3
2
Battery dispatch
kW
 
0
0
1
2
1
1
0
DataArray
batt_simple_chemistry
3
1
Battery chemistry
 
Battery
0
2
1
1
1
1
0
Choice
batt_simple_dispatch
3
1
Battery dispatch
 
Battery
0
2
1
1
1
1
0
Choice
batt_simple_enable
3
1
 
 
Battery
19
"Enable"| "Disable"
2
1
1
1
1
0
CheckBox
batt_simple_kw
3
1
Battery power
kW
Battery
0
2
1
1
1
1
3
Numeric
batt_simple_kwh
3
1
Battery capacity
kWh
Battery
0
2
1
1
1
1
10
Numeric
batt_simple_meter_position
3
1
Battery meter position
battery
Battery
0
8
1
1
1
1
0
Default
value_of_lost_load
3
1
Value of Lost Load
$/kWh
Electric Load
0
0
1
1
1
1
100
Numeric

249
equations{'batt_simple_meter_position'} = define()
{
	// behind the meter default
	batt_meter_position = 0;
	financial_model = financing();
	
	if (!strcmp(financial_model, 'Single Owner'))
		batt_meter_position = 1;

	return batt_meter_position;
};

1655
on_load{'Battery Model Simple with REopt'} = define()
{
	check_enabled();
	on_change{"batt_simple_enable"};
};
on_change{"batt_simple_enable"} = define(){check_enabled();};

function check_enabled()
{
	enable_battery = false;
	if (value("batt_simple_enable"))
		enable_battery = true;

	enable("batt_simple_kwh", enable_battery);
	enable("batt_simple_kw", enable_battery);
	enable("batt_simple_dispatch", enable_battery);
	enable("batt_simple_chemistry", enable_battery);
	enable("value_of_lost_load", enable_battery);
	enable("call_reopt", enable_battery);
}

on_change{'call_reopt'} = define(){
	reopt = reopt_size_battery();
	y = reopt.response;

	if (y.outputs.Scenario.status != "optimal")
		msgbox(y.outputs.Scenario.status);

	pv = y.outputs.Scenario.Site.PV;
	batt = y.outputs.Scenario.Site.Storage;
	elec = y.outputs.Scenario.Site.ElectricTariff;

	if (!batt.size_kw){
		value('batt_simple_kw', 0.0);
		value('batt_simple_kwh', 0.0);
	}

	batt_to_grid = null;
	if (batt.year_one_to_grid_series_kw)
		batt_to_grid = batt.year_one_to_grid_series_kw;
	batt_to_load = batt.year_one_to_load_series_kw;
	pv_charge = pv.year_one_to_battery_series_kw;
	grid_charge = elec.year_one_to_battery_series_kw;

	value('batt_simple_chemistry', 1);
	value('batt_simple_dispatch', 2);
	value('batt_simple_kw', batt.size_kw);
	value('batt_simple_kwh', batt.size_kwh);


	dispatch = alloc(8760);

	for (i=0; i<8760; i++){
		if (batt_to_grid){
			discharge = batt_to_grid[i] + batt_to_load[i];
		} else{
			discharge = batt_to_load[i];
		}
		charge = -pv_charge[i] - grid_charge[i];
		dispatch[i] = discharge + charge;
	}

	value('batt_custom_dispatch', dispatch);
};