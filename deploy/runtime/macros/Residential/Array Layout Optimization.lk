/*@

<br><br>
This macro helps the user determine the optimal array distribution on a land of fixed size. The User has the flexibility of choosing
between optimizing layout for either maximizing NPV or maximizing Annual Energy Production
@*/

// Macro user interface widgets
//@ name=land_area;type=number;label=Land area over which PV system is to be laid out (acres): ; value=0.4




land_area = macro.land_area ; 		//Total land area allotted by user for the desired PV system (in acres)
area = land_area/0.0002471 ;		//Total land area in m^2

// display warning if the macro is run outside of a case
if ( typeof(macro) == 'unknown' ) {
	msgbox('This macro must be run from within a case.');
	exit;
}


max_energy = 0;			//Placeholder for maximum energy
optimum_gcr = 0 ;		//Placeholder for the optimum GCR that yields maximum AEP 
optimum_tilt = 0;		//Placeholder for the panel tilt angle that yields maximum AEP




i = 0;	//row
end_simulation = false;
//end_calc = false;

for (gcr = 0.1 ; gcr <= 1 ; gcr = gcr + 0.1) { 			//Loop for iterating over a range of GCR

	j = -1;	//column
	set('subarray1_gcr', gcr);
	system_size = (area/get('cec_area'))*get('cec_p_mp_ref');
	set('desired_size', system_size);
	
	
	
	for (tilt = 0 ; tilt <= 90 ; tilt = tilt + 10) {	//Loop for iterating over a range of tilt angles
			
			j = j + 1; 	
			outln("j = ", j);
			
			//Conditional statement to ensure that the user input PV system size fits within allotted land area. 
			if(get('total_land_area') < land_area){			
					
				set('subarray1_tilt', tilt);
				simulate();
				annual_energy[i][j] = get('annual_energy');
				outln(" AEP = " ,annual_energy[i][j]);
					outln("GCR = ", gcr);
					outln("tilt = ", tilt);
				
				//Storing the appropriate results in the respective placeholders	
				if (annual_energy[i][j] > max_energy) {						
					max_energy = annual_energy[i][j] ;
					outln("max_energy = ", max_energy);			
					optimum_gcr = gcr;
					optimum_tilt = tilt;
				}
				
				
			
				//If conditions to end calculations prematurely once trend is observed
				prev_gcr = i - 1;
				if (j == 1 && i > 0 ) {
					//outln(annual_energy[prev_gcr][j]);
					if (annual_energy[prev_gcr] == null) {
						continue;
					}
					elseif(annual_energy[prev_gcr][j] != null && annual_energy[prev_gcr][j] > annual_energy[i][j]){
						end_simulation = true;
					}
			
				}
			}
			
			//End this loop if PV system size cannot fit in allotted land area and trend observed to allow ending prematurely
			elseif (get('total_land_area') > land_area )  {	
					outln("Allotted area for system size exceeded.\n\n");			
					break;
			}
			
			//End this loop if trend observed prematurely 
			elseif (get('total_land_area') < land_area && end_simulation == true) {
					break;
			}
			
	}
			//End this loop if trend observed prematurely 
			if (get('total_land_area') < land_area && end_simulation == true) {
					break;
			}
			
	i = i + 1;		
	outln("i = " + i);
}


outln("max energy = ", max_energy);
outln("Optimum GCR = " , optimum_gcr );
outln("Optimum tilt angle = " , optimum_tilt); 


