// convert TMY2, TMY3, or EPW file formats to SAM CSV using the SSC wfcsvconv compute module
function ssc_wfcsvconv( wf  )
{
	obj = ssc_create();
	ssc_var( obj, 'input_file', wf );
	result = ssc_exec( obj, 'wfcsvconv', true );
	if ( result == 0 )
	{
		output = ssc_var( obj, 'output_file');
		if ( file_exists(output) )
		{
			// wfcsvconv names file based on header info appropriate for legacy
			// versions of SAM to display library but not needed now so renaming
			// to less confusing name based on input file name:
			// input_file.csv is converted to input_file_samcsv.csv
			arr = split( wf , '.' );
			arr[ #arr-1 ] = '_samcsv.csv';
			new_name = arr[0];
			for( i=1; i<#arr; i++ ) { new_name += '.' + arr[i]; }
			new_name = replace( new_name, '._', '_');
			/*ext = ext_only( wf );
			if ( ext == 'tm2' ) { new_name = replace( wf, '.' + ext, '.csv' );	}
			elseif ( ext == 'epw' ) { new_name = replace( wf, '.' + ext, '.csv' );	}
			else { new_name = wf; }
			new_name = replace( new_name, '.csv', '_samcsv.csv' );*/
			
			ok = rename_file( output, new_name );
			if ( !ok ) { outln( 'Failed to rename file.' );}
			outln('Weather file successfully converted to:\n\t' + new_name );
			
			tcorr = in('Enter minute timestep correction:', '0', '');
			txt = csvread(new_name);
			for (i = 3; i < 8763; i++){
				txt[i][4] = tcorr;
			}		
			csvwrite(new_name, txt);
			
			browse( path_only(new_name) ); // show output file folder
			
			simulate('', true);
			dview_solar( new_name ); // display output file in DView
		}
		else
		{
			outln('An error occurred and the file could not be converted.');
		}
	}
	else
		outln( 'Error: ' + result );
	ssc_free( obj );
}

//=========================================================================================================================================================

function main()
{
	ext = 'epw';
	format = 'EPW';
	input_file = choose_file( '', 'Choose weather file to convert', 'Weather Files (*.epw)|*.' + ext);
	if ( input_file == '' ) return;

	outln( 'File to convert is:\n\t' + input_file );

	use_wfcsvconv = (format == 'EPW' );
	
	
	if ( use_wfcsvconv ) { ssc_wfcsvconv( input_file ); }
	
	else { outln( 'No format specified.' ); }
	
	outln( 'Done.');
}


//=========================================================================================================================================================


function wf_check ( wf )
{
	obj = ssc_create();
	ssc_var( obj, 'input_file', wf );
	result = ssc_exec( obj, 'wfcheck', {'show_dialog'=true, 'dialog_title'='Processing'} );
	if ( result == 0 )
	{
		n = ssc_var( obj, 'nwarnings');
		if ( n == 0 )
		{
			outln('File passed weather file check.');
			return true;
		}	
		else
		{
			outln( 'File failed weather file check:' );
			for( i=0;i<n;i++ )
			{
				outln( '\t* ' + ssc_var( obj, 'warning' + to_string(i) ) );
			}
			return false;
		}
	}
	else
	{
		outln( 'Failed to run weather file check:\n\n' + result );
		return false;
	}
	ssc_free( obj );
}

//=========================================================================================================================================================

main();







