// Inputs
Paco = 3800;
test_sample = 
[[339,172.2,93.1319,339,172.21,92.8767,339,172.19,93.1319,339,172.21,93.1319,339,172.19,93.1319],
[764,172.22,95.5,765,172.18,95.625,765,172.2,95.625,765,172.21,95.5056,764,172.2,95.3808],
[1148,172.19,95.9064,1147,172.21,95.7429,1149,172.21,95.8299,1148,172.2,95.8264,1148,172.18,95.8264],
[1875,172.51,95.957,1876,172.5,96.0082,1876,172.52,96.0082,1876,172.52,95.9591,1874,172.5,95.9549],
[2713,172.51,95.8996,2714,172.51,95.9011,2714,172.51,95.9011,2714,172.52,95.8672,2715,172.52,95.9364],
[3692,172.51,95.5734,3692,172.5,95.6229,3690,172.5,95.5711,3690,172.49,95.5711,3694,172.5,95.6004],
[358,397.04,93.4726,360,397.03,93.75,359,397.03,93.4896,361,398.36,94.2559,362,398.37,94.2708],
[789,398.53,96.4591,790,398.5,96.4548,789,398.49,96.4591,790,398.48,96.3415,790,398.48,96.3415],
[1225,398.61,97.2222,1224,398.62,97.1429,1225,398.61,97.2222,1225,398.61,97.2222,1224,398.59,97.2973],
[1930,398.66,97.1314,1931,398.68,97.1817,1930,398.67,97.1803,1930,398.66,97.1314,1930,398.67,97.1314],
[2787,398.75,97.1757,2787,398.76,97.2096,2787,398.73,97.2096,2788,398.76,97.1767,2785,398.77,97.1399],
[3923,398.91,97.0431,3921,398.88,97.0161,3920,398.89,97.0408,3920,398.88,97.0408,3921,398.88,97.0416],
[359,478.56,93.0052,360,478.54,93.0233,360,478.53,93.0233,354,477.03,92.1875,353,477.06,92.1671],
[788,478.64,95.6311,791,478.61,95.7627,789,478.61,95.8688,782,477.07,95.1338,782,477.08,95.1338],
[1190,478.64,96.5126,1190,478.6,96.5126,1190,478.6,96.5126,1191,478.65,96.5937,1189,478.65,96.5097],
[1935,478.79,96.8953,1935,478.83,96.8953,1934,478.79,96.8938,1936,478.81,96.8969,1933,478.8,96.8922],
[2796,478.86,97.016,2796,478.88,96.9487,2797,478.87,96.9834,2796,478.87,96.9487,2798,478.88,97.018],
[3808,478.94,96.8957,3809,478.96,96.9211,3809,478.94,96.9211,3808,478.95,96.8957,3809,478.96,96.9211]];

n_samples = 3;
n_levels = 6;

// Sample 1 ///////////////////

// Vmin 10% 20% 30% 50% 75% 100%
Pac[0][0] = [339,764,1148,1875,2713,3692];
Vin[0][0] = [172.2,172.22,172.19,172.51,172.51,172.51];
Eff[0][0] = [93.1319,95.5,95.9064,95.957,95.8996,95.5734];

// Vnom 10% 20% 30% 50% 75% 100%
Pac[0][1] = [358,789,1225,1930,2787,3923];
Vin[0][1] = [397.04,398.53,398.61,398.66,398.75,398.91];
Eff[0][1] = [93.4726,96.4591,97.2222,97.1314,97.1757,97.0431];

// Vmax 10% 20% 30% 50% 75% 100%
Pac[0][2] = [359,788,1190,1935,2796,3808];
Vin[0][2] = [478.56,478.64,478.64,478.79,478.86,478.94];
Eff[0][2] = [93.0052,95.6311,96.5126,96.8953,97.016,96.8957];

// Sample 2 ///////////////////

// Vmin 10% 20% 30% 50% 75% 100%
Pac[1][0] = [339,765,1147,1876,2714,3692];
Vin[1][0] = [172.21,172.18,172.21,172.5,172.51,172.5];
Eff[1][0] = [92.8767,95.625,95.7429,96.0082,95.9011,95.6229];

// Vnom 10% 20% 30% 50% 75% 100%
Pac[1][1] = [360,790,1224,1931,2787,3921];
Vin[1][1] = [397.03,398.5,398.62,398.68,398.76,398.88];
Eff[1][1] = [93.75,96.4548,97.1429,97.1817,97.2096,97.0161];

// Vmax 10% 20% 30% 50% 75% 100%
Pac[1][2] = [360,791,1190,1935,2796,3809];
Vin[1][2] = [478.54,478.61,478.6,478.83,478.88,478.96];
Eff[1][2] = [93.0233,95.7627,96.5126,96.8953,96.9487,96.9211];

// Sample 3 ///////////////////

// Vmin 10% 20% 30% 50% 75% 100%

Pac[2][0] = [339,765,1149,1876,2714,3690];
Vin[2][0] = [172.19,172.2,172.21,172.52,172.51,172.5];
Eff[2][0] = [93.1319,95.625,95.8299,96.0082,95.9011,95.5711];

// Vnom 10% 20% 30% 50% 75% 100%
Pac[2][1] = [359,789,1225,1930,2787,3920];
Vin[2][1] = [397.03,398.49,398.61,398.67,398.73,398.89];
Eff[2][1] = [93.4896,96.4591,97.2222,97.1803,97.2096,97.0408];

// Vmax 10% 20% 30% 50% 75% 100%
Pac[2][2] = [360,789,1190,1934,2797,3809];
Vin[2][2] = [478.53,478.61,478.6,478.79,478.87,478.94];
Eff[2][2] = [93.0233,95.8688,96.5126,96.8938,96.9834,96.9211];

for( s=0; s<n_samples; s++ ) // for each sample
{
	for( l=0; l<n_levels; l++ ) // for each power level
	{
		//vmin
		test_sample[l][s*3] = Pac[s*3][l];//Pac
		test_sample[l][s*3+1] = Vin[s*3+1][l];//Vin
		test_sample[l][s*3+2] = Eff[s*3+2][l];//Eff
		//vnom
		test_sample[l+n_levels][s*3] = Pac[s*3][l+n_levels];//Pac
		test_sample[l+n_levels][s*3+1] = Vin[s*3+1][l+n_levels];//Vin
		test_sample[l+n_levels][s*3+2] = Eff[s*3+2][l+n_levels];//Eff
		//vmax
		test_sample[l+2*n_levels][s*3] = Pac[s*3][l+2*n_levels];//Pac
		test_sample[l+2*n_levels][s*3+1] = Vin[s*3+1][l+2*n_levels];//Vin
		test_sample[l+2*n_levels][s*3+2] = Eff[s*3+2][l+2*n_levels];//Eff
	}
}

outln( test_sample );

// Create SAM SDK Simulation Core (SSC) object
obj = ssc_create();

ssc_var(obj, 'inv_cec_cg_paco', Paco); // in W
ssc_var(obj, 'inv_cec_cg_sample_power_units', 0); // kW test data
ssc_var(obj, 'inv_cec_cg_test_samples', test_sample);

result= ssc_exec(obj, 'inv_cec_cg', {'show_dialog'=false, 'hold_dialog'=false} );

if(result == 0)
{
Pdco = ssc_var(obj, 'Pdco');
Vdco = ssc_var(obj, 'Vdco');
Pso = ssc_var(obj, 'Pso');
c0 = ssc_var(obj, 'c0');
c1 = ssc_var(obj, 'c1');
c2 = ssc_var(obj, 'c2');
c3 = ssc_var(obj, 'c3');

outln(sprintf( 'Pdco=%g Vdco=%g Pso=%g c0=%g c1=%g c2=%g, c3=%g', 
                Pdco,Vdco,Pso,c0,c1,c2,c3 ) );
}
else
{
outln('Error: ' + result );
}

ssc_free(obj);
